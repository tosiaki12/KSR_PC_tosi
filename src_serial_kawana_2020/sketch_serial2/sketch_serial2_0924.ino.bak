//シリアル通信

/*
   受信の判定
   一命令ごとに<>区切り　命令ごとの改行も対応
   命令の作成はパソコン側　arduinoは読むだけ
   命令以外は一文字ずつ送信
   基本一受信一命令
   複数の命令は一つずつ区切って送信

   送信
   すべて最後には改行

   loopでデータがあるか判定
   あればstringにして命令かどうか判定
   命令ならmeireiRead()
   命令以外は一文字ずつループしながら読む

*/

//#include <string.h>

double duration = 0;
double distance = 0;
bool isEchoCont = false;
bool loopcount = false;
String data;

const int PMM = 10;
const int PMH = 9;
const int PMU = 8;


void setup() {
  // put your setup code here, to run once:

  Serial.begin(9600);
  Serial.setTimeout(1000);//初期値1000ms
  delay(500);
  pinMode(2, INPUT);//echo
  pinMode(3, OUTPUT);//trig
}

void loop() {
  delay(50);
  if (loopcount) {
    loopcount = false;
  } else {
    loopcount = true;
  }

  if (Serial.available() > 0) {//データが存在する
    int d = Serial.read();
    if (d == 60) {
      data = Serial.readStringUntil('>');//<で始まり>で終わる
      Serial.println("recC->" + data);
      Serial.flush();//送信が終わるまで待つ
      meireiRead(data);
    } else {
      Serial.print("recT->");
      Serial.println(d, HEX);
      Serial.flush();
    }
  }
  data = "N";
  if (loopcount) {
    runEcho('n');//ループ二回に一回だけecho
  }

}

void meireiRead(String com) {
  String command;
  char t;
  bool isFincom = false;//空白か
  for (char a : com) {
    if (a != ' ' && isFincom == false) {//命令文字なら
      command += a;
    } else if (a == ' ') {
      isFincom = true;
      continue;
    }
    if (isFincom == true) t = a;
  }
  Serial.println("com:" + command);
  Serial.println("pal:" + String(t));
  //Serial.println("pal:" + t);//これをやると送信できない　DECをつけても無理 文字列が詰まる
  Serial.flush();
  if (command.compareTo("run") == 0) runMotor(t);//比較
  if (command.compareTo("echo") == 0) runEcho(t);




}

void runMotor(char pal) {
  runLED(13, 100);
  switch (pal) {
    case 'f':
      digitalWrite(PMU, LOW);
      digitalWrite(PMM, HIGH);
      digitalWrite(PMH, HIGH);
      break;
    case 'm':
      digitalWrite(PMH, LOW);
      digitalWrite(PMU, LOW);
      digitalWrite(PMM, HIGH);
      break;
    case 'h':
      digitalWrite(PMM, LOW);
      digitalWrite(PMU, LOW);
      digitalWrite(PMH, HIGH);
      break;
    case 'u':
      digitalWrite(PMM, LOW);
      digitalWrite(PMH, LOW);
      digitalWrite(PMU, HIGH);
      break;
    case 's':
      digitalWrite(PMM, LOW);
      digitalWrite(PMH, LOW);
      digitalWrite(PMU, LOW);
  }
}

void runEcho(char pal) {
  switch (pal) {
    case 'b':
      isEchoCont = true;
      break;
    case 'e':
      isEchoCont = false;
      break;
  }
  if (pal != 'b' and pal != 'e' and isEchoCont) {

    //第16回 Arduinoでパーツやセンサを使ってみよう～超音波モジュール編
    //https://deviceplus.jp/hobby/entry016/
    if (isEchoCont) {
      digitalWrite(3, LOW);
      delayMicroseconds(2);
      digitalWrite(3, HIGH);
      delayMicroseconds(10);
      digitalWrite(3, LOW);
      duration = pulseIn(2, HIGH);
      if (duration > 0) {
        duration = duration / 2;
        distance = duration * 340 * 100 / 1000000;
        int dis = floor(distance);
        if (dis > 800) {
          Serial.println("OOR");
        } else {
          Serial.println("dis:" + String(dis) + "cm");
        }
        Serial.flush();
      }
      delay(50);
    }
  }

}


void runLED(int pin, int msec) {
  digitalWrite(pin, HIGH);
  delay(msec);
  digitalWrite(pin, LOW);
  delay(msec);
}
